{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/api/devtools","result":{"data":{"mdx":{"slug":"api/devtools","frontmatter":{"title":"Devtools","description":"This doc describes Devtools for Jotai."},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Devtools\",\n  \"description\": \"This doc describes Devtools for Jotai.\",\n  \"nav\": 2.03\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar CodeSandbox = makeShortcode(\"CodeSandbox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u5B89\\u88C5\"), mdx(\"p\", null, \"\\u60A8\\u5FC5\\u987B\\u5B89\\u88C5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jotai-devtools\"), \" \\u624D\\u80FD\\u4F7F\\u7528\\u6B64\\u529F\\u80FD\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npm install jotai-devtools\\n# or\\nyarn add jotai-devtools\\n\")), mdx(\"h2\", null, \"useAtomsDebugValue\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomsDebugValue\"), \" \\u662F\\u4E00\\u4E2A React hook\\uFF0C\\u5B83\\u5C06\\u5728 React Devtools \\u4E2D\\u663E\\u793A\\u6240\\u6709\\u539F\\u5B50\\u503C\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function useAtomsDebugValue(options?: {\\n  scope?: Scope;\\n  enabled?: boolean;\\n}): void;\\n\")), mdx(\"p\", null, \"\\u5728\\u5185\\u90E8\\uFF0C\\u5B83\\u4F7F\\u7528\\u4EC5\\u5728 DEV \\u6A21\\u5F0F\\u4E0B\\u6709\\u6548\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useDebugValue\"), \"\\u3002\\n\\u5B83\\u5C06\\u6355\\u83B7\\u6240\\u6709\\u53EF\\u4ECE hook \\u6240\\u5728\\u4F4D\\u7F6E\\u8BBF\\u95EE\\u7684\\u539F\\u5B50\\u3002\"), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { useAtomsDebugValue } from \\\"jotai-devtools\\\";\\n\\nconst textAtom = atom(\\\"hello\\\");\\ntextAtom.debugLabel = \\\"textAtom\\\";\\n\\nconst lenAtom = atom((get) => get(textAtom).length);\\nlenAtom.debugLabel = \\\"lenAtom\\\";\\n\\nconst TextBox = () => {\\n  const [text, setText] = useAtom(textAtom);\\n  const [len] = useAtom(lenAtom);\\n  return (\\n    <span>\\n      <input value={text} onChange={(e) => setText(e.target.value)} />({len})\\n    </span>\\n  );\\n};\\n\\nconst DebugAtoms = () => {\\n  useAtomsDebugValue();\\n  return null;\\n};\\n\\nconst App = () => (\\n  <Provider>\\n    <DebugAtoms />\\n    <TextBox />\\n  </Provider>\\n);\\n\")), mdx(CodeSandbox, {\n    id: \"vvp12f\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h2\", null, \"useAtomDevtools\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomDevtools\"), \" \\u662F\\u4E00\\u4E2A React hook\\uFF0C\\u7528\\u4E8E\\u7BA1\\u7406\\u7279\\u5B9A\\u539F\\u5B50\\u7684 ReduxDevTools \\u96C6\\u6210\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function useAtomDevtools<Value>(\\n  anAtom: WritableAtom<Value, Value>,\\n  options?: {\\n    name?: string;\\n    scope?: Scope;\\n    enabled?: boolean;\\n  }\\n): void;\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomDevtools\"), \" hook \\u63A5\\u53D7\\u4E00\\u4E2A\\u6CDB\\u578B\\u7C7B\\u578B\\u53C2\\u6570\\uFF08\\u955C\\u50CF\\u5B58\\u50A8\\u5728\\u539F\\u5B50\\u4E2D\\u7684\\u7C7B\\u578B\\uFF09\\u3002 \\u6B64\\u5916\\uFF0C\\u8BE5 hook \\u63A5\\u53D7\\u4E24\\u4E2A\\u8C03\\u7528\\u53C2\\u6570\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"anAtom\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \"\\u3002\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"anAtom\"), \" \\u662F\\u5C06\\u9644\\u52A0\\u5230 devtools \\u5B9E\\u4F8B\\u7684\\u539F\\u5B50\\u3002 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" \\u662F\\u4E00\\u4E2A\\u53EF\\u9009\\u53C2\\u6570\\uFF0C\\u7528\\u4E8E\\u5B9A\\u4E49 devtools \\u5B9E\\u4F8B\\u7684\\u8C03\\u8BD5\\u6807\\u7B7E\\u3002 \\u5982\\u679C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" \\u672A\\u5B9A\\u4E49\\uFF0C\\u5C06\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atom.debugLabel\"), \" \\u4EE3\\u66FF\\u3002\"), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { useAtomDevtools } from \\\"jotai-devtools\\\";\\n\\n// \\u5B58\\u50A8\\u5728\\u539F\\u5B50\\u4E2D\\u7684\\u7C7B\\u578B\\u7684\\u63A5\\u53E3\\u3002\\nexport interface Task {\\n  label: string;\\n  complete: boolean;\\n}\\n\\n// \\u8981\\u8C03\\u8BD5\\u7684\\u539F\\u5B50\\u3002\\nexport const tasksAtom = atom<Task[]>([]);\\n\\n// \\u5982\\u679C useAtomDevtools name \\u53C2\\u6570\\u672A\\u5B9A\\u4E49\\uFF0C\\u5C06\\u4F7F\\u7528\\u6B64\\u503C\\u4EE3\\u66FF\\u3002\\ntasksAtom.debugLabel = \\\"Tasks\\\";\\n\\nexport const useTasksDevtools = () => {\\n  // hook \\u53EF\\u4EE5\\u7B80\\u5355\\u5730\\u901A\\u8FC7\\u4F20\\u9012\\u4E00\\u4E2A\\u7528\\u4E8E\\u8C03\\u8BD5\\u7684\\u539F\\u5B50\\u6765\\u8C03\\u7528\\u3002\\n  useAtomDevtools(tasksAtom);\\n\\n  // \\u6307\\u5B9A\\u81EA\\u5B9A\\u4E49\\u7C7B\\u578B\\u53C2\\u6570\\n  useAtomDevtools<Task[]>(tasksAtom);\\n\\n  // \\u60A8\\u53EF\\u4EE5\\u5C06\\u4E24\\u4E2A devtools \\u5B9E\\u4F8B\\u9644\\u52A0\\u5230\\u540C\\u4E00\\u4E2A\\u539F\\u5B50\\uFF0C\\u5E76\\u4F7F\\u7528\\u81EA\\u5B9A\\u4E49\\u540D\\u79F0\\u6765\\u533A\\u5206\\u5B83\\u4EEC\\u3002\\n  useAtomDevtools(tasksAtom, \\\"Tasks (Instance 1)\\\");\\n  useAtomDevtools(tasksAtom, \\\"Tasks (Instance 2)\\\");\\n};\\n\")), mdx(\"h2\", null, \"useAtomsDevtools\"), mdx(\"p\", null, \"\\u26A0\\uFE0F \\u6CE8\\u610F\\uFF1A\\u8FD9\\u4E2A hook \\u662F\\u5B9E\\u9A8C\\u6027\\u7684\\uFF08\\u6B22\\u8FCE\\u63D0\\u4F9B\\u53CD\\u9988\\uFF09\\u5E76\\u4E14\\u53EA\\u80FD\\u5728 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"process.env.NODE_ENV !== 'production'\"), \" \\u73AF\\u5883\\u4E2D\\u5DE5\\u4F5C\\u3002\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomsDevtools\"), \" \\u662F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomDevtools\"), \" \\u7684\\u5305\\u7F57\\u4E07\\u8C61\\u7684\\u7248\\u672C\\uFF0C\\u5B83\\u663E\\u793A store \\u4E2D\\u7684\\u6240\\u6709\\u539F\\u5B50\\uFF0C\\u800C\\u4E0D\\u662F\\u663E\\u793A\\u7279\\u5B9A\\u7684\\u539F\\u5B50\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function useAtomsDevtools(\\n  name: string,\\n  options?: {\\n    scope?: Scope;\\n    enabled?: boolean;\\n  }\\n): void;\\n\")), mdx(\"p\", null, \"\\u5B83\\u9700\\u8981\\u4E00\\u4E2A\\u547D\\u540D Redux devtools \\u5B9E\\u4F8B\\u6240\\u9700\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"name\"), \" \\u53C2\\u6570\\u548C\\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scope\"), \" \\u53C2\\u6570\\uFF08\\u5982\\u679C hook \\u7528\\u4E8E\\u7279\\u5B9A\\u8303\\u56F4\\u7684\\u539F\\u5B50\\uFF09\\u3002\"), mdx(\"p\", null, \"\\u4F5C\\u4E3A\\u6B64 API \\u7684\\u4E00\\u4E2A\\u9650\\u5236\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u5C06 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomsDevtools\"), \" \\u653E\\u5728\\u4E00\\u4E2A\\u7EC4\\u4EF6\\u4E2D\\uFF0C\\u5176\\u4E2D\\u6D88\\u8017\\u7684 atom \\u5E94\\u8BE5\\u4F4D\\u4E8E React \\u6811\\u7684\\u8F83\\u4F4E\\u4F4D\\u7F6E\\u800C\\u4E0D\\u662F\\u8BE5\\u7EC4\\u4EF6\\uFF08\\u4E0B\\u4F8B\\u4E2D\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AtomsDevtools\"), \"\\uFF09\\u3002\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AtomsDevtools\"), \" \\u7EC4\\u4EF6\\u53EF\\u4EE5\\u88AB\\u89C6\\u4E3A\\u6211\\u4EEC\\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u6700\\u4F73\\u5B9E\\u8DF5\\u3002\"), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"const countAtom = atom(0);\\nconst doubleCountAtom = atom((get) => get(countAtom) * 2);\\n\\nfunction Counter() {\\n  const  [count, setCount] =  useAtom(countAtom);\\n  const  [doubleCount] =  useAtom(doubleCountAtom);\\n\\n  ...\\n}\\n\\nconst AtomsDevtools = ({ children }) => {\\n  useAtomsDevtools('demo')\\n  return children\\n}\\n\\nexport default function App()  {\\n  return (\\n    <AtomsDevtools>\\n      <Counter />\\n    </AtomsDevtools>\\n  )\\n }\\n\")), mdx(CodeSandbox, {\n    id: \"3xobn\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h2\", null, \"useAtomsSnapshot\"), mdx(\"p\", null, \"\\u26A0\\uFE0F \\u6CE8\\u610F\\uFF1A\\u6B64 hook \\u4EC5\\u9002\\u7528\\u4E8E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"process.env.NODE_ENV !== 'production'\"), \" \\u73AF\\u5883\\u3002 \\u5B83\\u5728\\u751F\\u4EA7\\u4E2D\\u8FD4\\u56DE\\u4E00\\u4E2A\\u9759\\u6001\\u7684\\u7A7A\\u503C\\u3002\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomsSnapshot\"), \" \\u83B7\\u53D6\\u5F53\\u524D\\u5B89\\u88C5\\u7684\\u539F\\u5B50\\u53CA\\u5176\\u72B6\\u6001\\u7684\\u5FEB\\u7167\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function useAtomsSnapshot(scope?: Scope): AtomsSnapshot;\\n\")), mdx(\"p\", null, \"\\u5B83\\u63A5\\u53D7\\u4E00\\u4E2A\\u539F\\u5B50 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scope\"), \" \\u53C2\\u6570\\u5E76\\u5C06\\u8FD4\\u56DE\\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AtomsSnapshot\"), \"\\uFF0C\\u5B83\\u57FA\\u672C\\u4E0A\\u662F\\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Map<AnyAtom, unknown>\"), \"\\u3002 \\u60A8\\u53EF\\u4EE5\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Map\"), \" API \\u8FED\\u4EE3\\u539F\\u5B50\\u53CA\\u5176\\u72B6\\u6001\\u3002\\n\\u8FD9\\u4E2A hook \\u4E3B\\u8981\\u7528\\u4E8E\\u8C03\\u8BD5\\u548C devtools \\u7528\\u4F8B\\u3002\"), mdx(\"p\", null, \"\\u4F7F\\u7528\\u8FD9\\u4E2A hook \\u8981\\u5C0F\\u5FC3\\uFF0C\\u56E0\\u4E3A\\u5B83\\u4F1A\\u5BFC\\u81F4\\u7EC4\\u4EF6\\u4E3A\\u6240\\u6709\\u72B6\\u6001\\u66F4\\u6539\\u91CD\\u65B0\\u6E32\\u67D3\\u3002\"), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Provider } from \\\"jotai\\\";\\nimport { useAtomsSnapshot } from \\\"jotai-devtools\\\";\\n\\nconst RegisteredAtoms = () => {\\n  const atoms = useAtomsSnapshot();\\n\\n  return (\\n    <div>\\n      <p>Atom count: {atoms.size}</p>\\n      <div>\\n        {Array.from(atoms).map(([atom, atomValue]) => (\\n          <p key={`${atom}`}>{`${atom.debugLabel}: ${atomValue}`}</p>\\n        ))}\\n      </div>\\n    </div>\\n  );\\n};\\n\\nconst App = () => (\\n  <Provider>\\n    <RegisteredAtoms />\\n  </Provider>\\n);\\n\")), mdx(\"h2\", null, \"useGotoAtomsSnapshot\"), mdx(\"p\", null, \"\\u26A0\\uFE0F \\u6CE8\\u610F\\uFF1A\\u6B64 hook \\u4EC5\\u9002\\u7528\\u4E8E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"process.env.NODE_ENV !== 'production'\"), \" \\u73AF\\u5883\\u3002 \\u5B83\\u5728\\u751F\\u4EA7\\u73AF\\u5883\\u4E2D\\u5C31\\u50CF\\u4E00\\u4E2A\\u7A7A\\u51FD\\u6570\\u3002\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useGotoAtomsSnapshot\"), \" \\u5C06\\u66F4\\u65B0\\u5F53\\u524D\\u7684 Jotai \\u72B6\\u6001\\u4EE5\\u5339\\u914D\\u4F20\\u9012\\u7684\\u5FEB\\u7167\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function useGotoAtomsSnapshot(\\n  scope?: Scope\\n): (values: Iterable<readonly [AnyAtom, unknown]>) => void;\\n\")), mdx(\"p\", null, \"\\u8FD9\\u4E2A hook \\u8FD4\\u56DE\\u4E00\\u4E2A\\u56DE\\u8C03\\uFF0C\\u5B83\\u4ECE \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useAtomsSnapshot\"), \" hook \\u4E2D\\u83B7\\u53D6\\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"snapshot\"), \" \\u5E76\\u5C06\\u66F4\\u65B0 Jotai \\u72B6\\u6001\\u3002 \\u5B83\\u63A5\\u53D7\\u4E00\\u4E2A\\u539F\\u5B50 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scope\"), \" \\u53C2\\u6570\\uFF0C\\u5982\\u679C\\u539F\\u5B50\\u5177\\u6709\\u6DF7\\u5408\\u8303\\u56F4\\uFF0C\\u5219\\u4F1A\\u51FA\\u9519\\u3002\\n\\u8FD9\\u4E2A hook \\u4E3B\\u8981\\u7528\\u4E8E\\u8C03\\u8BD5\\u548C devtools \\u7528\\u4F8B\\u3002\"), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Provider } from \\\"jotai\\\";\\nimport { useAtomsSnapshot, useGotoAtomsSnapshot } from \\\"jotai-devtools\\\";\\n\\nconst petAtom = atom(\\\"cat\\\");\\nconst colorAtom = atom(\\\"blue\\\");\\n\\nconst UpdateSnapshot = () => {\\n  const snapshot = useAtomsSnapshot();\\n  const goToSnapshot = useGotoAtomsSnapshot();\\n  return (\\n    <button\\n      onClick={() => {\\n        const newSnapshot = new Map(snapshot);\\n        newSnapshot.set(petAtom, \\\"dog\\\");\\n        newSnapshot.set(colorAtom, \\\"green\\\");\\n        goToSnapshot(newSnapshot);\\n      }}\\n    >\\n      Go to snapshot\\n    </button>\\n  );\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"6688e961-df15-5097-b375-8191a56784fc","slug":"api/devtools","__params":{"slug":"api"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}