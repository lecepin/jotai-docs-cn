{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/integrations/relay","result":{"data":{"mdx":{"slug":"integrations/relay","frontmatter":{"title":"Relay","description":"This doc describes Relay integration."},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Relay\",\n  \"description\": \"This doc describes Relay integration.\",\n  \"nav\": 4.12\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar CodeSandbox = makeShortcode(\"CodeSandbox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u60A8\\u53EF\\u4EE5\\u5C06 Jotai \\u4E0E \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev\"\n  }, \"Relay\"), \" \\u4E00\\u8D77\\u4F7F\\u7528\\u3002\"), mdx(\"h2\", null, \"\\u5B89\\u88C5\"), mdx(\"p\", null, \"\\u4F60\\u5FC5\\u987B\\u5B89\\u88C5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jotai-relay\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"relay-runtime\"), \"\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"yarn add jotai-relay relay-runtime\\n\")), mdx(\"h2\", null, \"\\u4F7F\\u7528\"), mdx(\"p\", null, \"\\u8BF7\\u53C2\\u9605 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/\"\n  }, \"Relay Docs\"), \" \\u4EE5\\u4E86\\u89E3\\u57FA\\u7840\\u77E5\\u8BC6\\u4EE5\\u53CA\\u5982\\u4F55\\u63D0\\u524D\\u4F7F\\u7528\\u7F16\\u8BD1\\u5668\\u3002\"), mdx(\"h2\", null, \"atomWithQuery\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithQuery\"), \" \\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/api-reference/fetch-query/\"\n  }, \"fetchQuery\"), \" \\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u539F\\u5B50\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import React, { Suspense } from \\\"react\\\";\\nimport { Provider, useAtom } from \\\"jotai\\\";\\nimport { environmentAtom, atomWithQuery } from \\\"jotai-relay\\\";\\nimport { Environment, Network, RecordSource, Store } from \\\"relay-runtime\\\";\\nimport graphql from \\\"babel-plugin-relay/macro\\\";\\n\\nconst myEnvironment = new Environment({\\n  network: Network.create(async (params, variables) => {\\n    const response = await fetch(\\\"https://countries.trevorblades.com/\\\", {\\n      method: \\\"POST\\\",\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\",\\n      },\\n      body: JSON.stringify({\\n        query: params.text,\\n        variables,\\n      }),\\n    });\\n    return response.json();\\n  }),\\n  store: new Store(new RecordSource()),\\n});\\n\\nconst countriesAtom = atomWithQuery(\\n  graphql`\\n    query AppCountriesQuery {\\n      countries {\\n        name\\n      }\\n    }\\n  `,\\n  () => ({})\\n);\\n\\nconst Main = () => {\\n  const [data] = useAtom(countriesAtom);\\n  return (\\n    <ul>\\n      {data.countries.map(({ name }) => (\\n        <li key={name}>{name}</li>\\n      ))}\\n    </ul>\\n  );\\n};\\n\\nconst App = () => {\\n  return (\\n    <Provider initialValues={[[environmentAtom, myEnvironment]]}>\\n      <Suspense fallback=\\\"Loading...\\\">\\n        <Main />\\n      </Suspense>\\n    </Provider>\\n  );\\n};\\n\")), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(CodeSandbox, {\n    id: \"cxc6p5\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h2\", null, \"atomWithMutation\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithMutation\"), \" \\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/api-reference/commit-mutation/\"\n  }, \"commitMutation\"), \" \\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u539F\\u5B50\\u3002\"), mdx(\"p\", null, \"FIXME: \\u6DFB\\u52A0\\u4EE3\\u7801\\u793A\\u4F8B\\u548C codesandbox\"), mdx(\"h2\", null, \"atomWithSubscription\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithSubscription\"), \" \\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://relay.dev/docs/api-reference/request-subscription/\"\n  }, \"requestSubscription\"), \" \\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u539F\\u5B50\\u3002\"), mdx(\"p\", null, \"FIXME: \\u6DFB\\u52A0\\u4EE3\\u7801\\u793A\\u4F8B\\u548C codesandbox\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"254d4284-8938-5386-a7cf-582b7c5f5b42","slug":"integrations/relay","__params":{"slug":"integrations"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}