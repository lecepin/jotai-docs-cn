{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/integrations/optics","result":{"data":{"mdx":{"slug":"integrations/optics","frontmatter":{"title":"Optics","description":"This doc describes Optics-ts integration."},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Optics\",\n  \"description\": \"This doc describes Optics-ts integration.\",\n  \"nav\": 4.02\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar CodeSandbox = makeShortcode(\"CodeSandbox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u5B89\\u88C5\"), mdx(\"p\", null, \"\\u60A8\\u5FC5\\u987B\\u5B89\\u88C5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"optics-ts\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jotai-optics\"), \" \\u624D\\u80FD\\u4F7F\\u7528\\u6B64\\u529F\\u80FD\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npm install optics-ts jotai-optics\\n# or\\nyarn add optics-ts jotai-optics\\n\")), mdx(\"h2\", null, \"focusAtom\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"focusAtom\"), \" \\u6839\\u636E\\u60A8\\u4F20\\u9012\\u7ED9\\u5B83\\u7684 focus \\u521B\\u5EFA\\u4E00\\u4E2A\\u65B0\\u539F\\u5B50\\u3002 \\u8FD9\\u5C06\\u521B\\u5EFA\\u4E00\\u4E2A\\u6D3E\\u751F\\u539F\\u5B50\\uFF0C\\u5B83\\u5C06\\u4E13\\u6CE8\\u4E8E\\u539F\\u5B50\\u7684\\u6307\\u5B9A\\u90E8\\u5206\\uFF0C\\u5F53\\u6D3E\\u751F\\u539F\\u5B50\\u66F4\\u65B0\\u65F6\\uFF0C\\u6D3E\\u751F\\u539F\\u5B50\\u4F1A\\u6536\\u5230\\u66F4\\u65B0\\u901A\\u77E5\\uFF0C\\u5E76\\u5728\\u6D3E\\u751F\\u5BF9\\u8C61\\u4E0A\\u8FDB\\u884C\\u7B49\\u6548\\u66F4\\u65B0\\u3002\"), mdx(\"p\", null, \"\\u770B\\u8FD9\\u91CC:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const baseAtom = atom({ a: 5 }); // PrimitiveAtom<{a: number}>\\nconst derivedAtom = focusAtom(baseAtom, (optic) => optic.prop(\\\"a\\\")); // PrimitiveAtom<number>\\n\")), mdx(\"p\", null, \"\\u6240\\u4EE5\\u57FA\\u672C\\u4E0A\\uFF0C\\u6211\\u4EEC\\u4ECE\\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PrimitiveAtom<{a: number}>\"), \" \\u5F00\\u59CB\\uFF0C\\u5B83\\u6709\\u4E00\\u4E2A getter \\u548C\\u4E00\\u4E2A setter\\uFF0C\\u7136\\u540E\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"focusAtom\"), \" \\u653E\\u5927 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"baseAtom\"), \" \\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"a\"), \" \\u5C5E\\u6027\\uFF0C\\u5F97\\u5230 \\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PrimitiveAtom<number>\"), \"\\u3002 \\u8FD9\\u91CC\\u503C\\u5F97\\u6CE8\\u610F\\u7684\\u662F\\uFF0C\\u8FD9\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"derivedAtom\"), \" \\u4E0D\\u4EC5\\u662F\\u4E00\\u4E2A getter\\uFF0C\\u5B83\\u8FD8\\u662F\\u4E00\\u4E2A setter\\u3002 \\u5982\\u679C\\u66F4\\u65B0\\u4E86 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"derivedAtom\"), \"\\uFF0C\\u5219\\u5BF9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"baseAtom\"), \" \\u8FDB\\u884C\\u7B49\\u6548\\u66F4\\u65B0\\u3002\"), mdx(\"p\", null, \"\\u4E0B\\u9762\\u7684\\u793A\\u4F8B\\u5F88\\u7B80\\u5355\\uFF0C\\u4F46\\u5B83\\u53EA\\u662F\\u4E00\\u4E2A\\u8D77\\u70B9\\u3002 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"focusAtom\"), \" \\u652F\\u6301\\u591A\\u79CD Optics\\uFF0C\\u5305\\u62EC\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Lens\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Prism\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Isomorphism\"), \"\\u3002\"), mdx(\"p\", null, \"\\u8981\\u67E5\\u770B\\u66F4\\u9AD8\\u7EA7\\u7684 Optics\\uFF0C\\u8BF7\\u53C2\\u9605\\u4EE5\\u4E0B\\u793A\\u4F8B\\uFF1A\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/akheron/optics-ts\"\n  }, \"https://github.com/akheron/optics-ts\")), mdx(\"h2\", null, \"\\u793A\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { atom } from \\\"jotai\\\";\\nimport { focusAtom } from \\\"jotai-optics\\\";\\n\\nconst objectAtom = atom({ a: 5, b: 10 });\\nconst aAtom = focusAtom(objectAtom, (optic) => optic.prop(\\\"a\\\"));\\nconst bAtom = focusAtom(objectAtom, (optic) => optic.prop(\\\"b\\\"));\\n\\nconst Controls = () => {\\n  const [a, setA] = useAtom(aAtom);\\n  const [b, setB] = useAtom(bAtom);\\n  return (\\n    <div>\\n      <span>Value of a: {a}</span>\\n      <span>Value of b: {b}</span>\\n      <button onClick={() => setA((oldA) => oldA + 1)}>Increment a</button>\\n      <button onClick={() => setB((oldB) => oldB + 1)}>Increment b</button>\\n    </div>\\n  );\\n};\\n\")), mdx(\"h3\", null, \"Codesandbox\"), mdx(CodeSandbox, {\n    id: \"nsy4u8\",\n    mdxType: \"CodeSandbox\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"19ca7206-d47b-564d-8b4b-e69c2c24dc23","slug":"integrations/optics","__params":{"slug":"integrations"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}