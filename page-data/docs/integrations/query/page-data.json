{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/integrations/query","result":{"data":{"mdx":{"slug":"integrations/query","frontmatter":{"title":"TanStack Query","description":"This doc describes TanStack Query integration."},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"TanStack Query\",\n  \"description\": \"This doc describes TanStack Query integration.\",\n  \"nav\": 4.03\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar CodeSandbox = makeShortcode(\"CodeSandbox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/\"\n  }, \"TanStack Query\"), \" \\u63D0\\u4F9B\\u4E86\\u4E00\\u7EC4\\u7528\\u4E8E\\u7BA1\\u7406\\u5F02\\u6B65\\u72B6\\u6001\\uFF08\\u901A\\u5E38\\u662F\\u5916\\u90E8\\u6570\\u636E\\uFF09\\u7684\\u51FD\\u6570\\u3002\"), mdx(\"p\", null, \"\\u6765\\u81EA\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/overview\"\n  }, \"\\u6982\\u8FF0\\u6587\\u6863\"), \"\\uFF1A\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"React Query \\u901A\\u5E38\\u88AB\\u63CF\\u8FF0\\u4E3A React \\u7F3A\\u5C11\\u7684\\u6570\\u636E\\u83B7\\u53D6\\u5E93\\uFF0C\\u4F46\\u5728\\u66F4\\u4E13\\u4E1A\\u7684\\u672F\\u8BED\\u4E2D\\uFF0C\\u5B83\\u4F7F React \\u5E94\\u7528\\u7A0B\\u5E8F\\u4E2D\\u7684 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u83B7\\u53D6\\u3001\\u7F13\\u5B58\\u3001\\u540C\\u6B65\\u548C\\u66F4\\u65B0\\u670D\\u52A1\\u5668\\u72B6\\u6001\"), \" \\u53D8\\u5F97\\u8F7B\\u800C\\u6613\\u4E3E\\u3002\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/jotai-labs/jotai-tanstack-query\"\n  }, \"jotai-tanstack-query\"), \" \\u662F\\u4E00\\u4E2A\\u7528\\u4E8E TanStack Query \\u7684 Jotai \\u96C6\\u6210\\u5E93\\u3002 \\u5B83\\u4E3A\\u6240\\u6709 TanStack \\u67E5\\u8BE2\\u529F\\u80FD\\u63D0\\u4F9B\\u4E86\\u4E00\\u4E2A\\u7F8E\\u5999\\u7684\\u754C\\u9762\\uFF0C\\u4F7F\\u60A8\\u80FD\\u591F\\u5C06\\u8FD9\\u4E9B\\u529F\\u80FD\\u4E0E\\u73B0\\u6709\\u7684 Jotai \\u72B6\\u6001\\u7ED3\\u5408\\u4F7F\\u7528\\u3002\"), mdx(\"h2\", null, \"\\u5B89\\u88C5\"), mdx(\"p\", null, \"\\u9664\\u4E86 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jotai\"), \" \\u4E4B\\u5916\\uFF0C\\u60A8\\u8FD8\\u5FC5\\u987B\\u5B89\\u88C5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jotai-tanstack-query\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@tanstack/query-core\"), \" \\u624D\\u80FD\\u4F7F\\u7528\\u96C6\\u6210\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"yarn add jotai-tanstack-query @tanstack/query-core\\n\")), mdx(\"h2\", null, \"\\u5BFC\\u51FA\\u51FD\\u6570\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tanstack.com/query/v4/docs/reference/QueryObserver\"\n  }, \"QueryObserver\"), \" \\u7684\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"atomsWithQuery\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://tanstack.com/query/v4/docs/reference/InfiniteQueryObserver\"\n  }, \"InfiniteQueryObserver\"), \" \\u7684\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"atomsWithInfiniteQuery\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MutationObserver \\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"atomsWithMutation\"))), mdx(\"p\", null, \"\\u6240\\u6709\\u4E09\\u4E2A\\u51FD\\u6570\\u90FD\\u9075\\u5FAA\\u76F8\\u540C\\u7684\\u7B7E\\u540D\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"const [dataAtom, statusAtom] = atomsWithSomething(getOptions, getQueryClient);\\n\")), mdx(\"p\", null, \"\\u7B2C\\u4E00\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getOptions\"), \" \\u53C2\\u6570\\u662F\\u4E00\\u4E2A\\u5C06\\u8F93\\u5165\\u8FD4\\u56DE\\u7ED9\\u89C2\\u5BDF\\u8005\\u7684\\u51FD\\u6570\\u3002\\n\\u7B2C\\u4E8C\\u4E2A\\u53EF\\u9009\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getQueryClient\"), \" \\u53C2\\u6570\\u662F\\u4E00\\u4E2A\\u8FD4\\u56DE \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/reference/QueryClient\"\n  }, \"QueryClient\"), \" \\u7684\\u51FD\\u6570\\u3002\"), mdx(\"p\", null, \"\\u8FD4\\u56DE\\u503C\\u6709\\u4E24\\u4E2A\\u539F\\u5B50\\u3002\\n\\u7B2C\\u4E00\\u4E2A\\u79F0\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dataAtom\"), \"\\uFF0C\\u5B83\\u662F\\u6765\\u81EA\\u89C2\\u5BDF\\u8005\\u7684\\u6570\\u636E\\u7684\\u539F\\u5B50\\u3002 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dataAtom\"), \" \\u9700\\u8981 Suspense\\u3002\\n\\u7B2C\\u4E8C\\u4E2A\\u79F0\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"statusAtom\"), \"\\uFF0C\\u5B83\\u662F\\u6765\\u81EA\\u89C2\\u5BDF\\u8005\\u7684\\u5B8C\\u6574\\u7ED3\\u679C\\u7684\\u539F\\u5B50\\u3002 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"statusAtom\"), \" \\u4E0D\\u9700\\u8981 Suspense\\u3002\\n\\u6765\\u81EA\\u89C2\\u5BDF\\u8005\\u7684\\u6570\\u636E\\u4E5F\\u5305\\u542B\\u5728 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"statusAtom\"), \" \\u4E2D\\uFF0C\\u56E0\\u6B64\\u5982\\u679C\\u60A8\\u4E0D\\u4F7F\\u7528 Suspense\\uFF0C\\u5219\\u4E0D\\u9700\\u8981\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dataAtom\\u3002\")), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"atomsWithQuery\"), \" \\u4F7F\\u7528\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomsWithQuery\"), \" \\u4ECE TanStack Query \\u521B\\u5EFA\\u5B9E\\u73B0\\u6807\\u51C6 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/guides/queries\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Query\")), \" \\u7684\\u65B0\\u539F\\u5B50\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u67E5\\u8BE2\\u662F\\u5BF9\\u7ED1\\u5B9A\\u5230\\u552F\\u4E00\\u952E\\u7684\\u5F02\\u6B65\\u6570\\u636E\\u6E90\\u7684\\u58F0\\u660E\\u6027\\u4F9D\\u8D56\\u3002 \\u67E5\\u8BE2\\u53EF\\u4EE5\\u4E0E\\u4EFB\\u4F55\\u57FA\\u4E8E Promise \\u7684\\u65B9\\u6CD5\\uFF08\\u5305\\u62EC GET \\u548C POST \\u65B9\\u6CD5\\uFF09\\u4E00\\u8D77\\u4F7F\\u7528\\u4EE5\\u4ECE\\u670D\\u52A1\\u5668\\u83B7\\u53D6\\u6570\\u636E\\u3002\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { atom, useAtom } from \\\"jotai\\\";\\nimport { atomsWithQuery } from \\\"jotai-tanstack-query\\\";\\n\\nconst idAtom = atom(1);\\nconst [userAtom] = atomsWithQuery((get) => ({\\n  queryKey: [\\\"users\\\", get(idAtom)],\\n  queryFn: async ({ queryKey: [, id] }) => {\\n    const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\\n    return res.json();\\n  },\\n}));\\n\\nconst UserData = () => {\\n  const [data] = useAtom(userAtom);\\n  return <div>{JSON.stringify(data)}</div>;\\n};\\n\")), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"atomsWithInfiniteQuery\"), \" \\u4F7F\\u7528\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomsWithInfiniteQuery\"), \" \\u4E0E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomsWithQuery\"), \" \\u975E\\u5E38\\u76F8\\u4F3C\\uFF0C\\u4F46\\u5B83\\u9002\\u7528\\u4E8E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"InfiniteQuery\"), \"\\uFF0C\\u7528\\u4E8E\\u8981\\u5206\\u9875\\u7684\\u6570\\u636E\\u3002 \\u60A8\\u53EF\\u4EE5\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/guides/infinite-queries\"\n  }, \"\\u5728\\u6B64\\u5904\\u9605\\u8BFB\\u6709\\u5173\\u65E0\\u9650\\u67E5\\u8BE2\\u7684\\u66F4\\u591A\\u4FE1\\u606F\"), \"\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u53EF\\u4EE5\\u5C06 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u66F4\\u591A\\u6570\\u636E\"), \" \\u52A0\\u8F7D\\u5230\\u73B0\\u6709\\u6570\\u636E\\u96C6\\u6216 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u65E0\\u9650\\u6EDA\\u52A8\"), \" \\u4E2D\\u7684\\u6E32\\u67D3\\u5217\\u8868\\u4E5F\\u662F\\u4E00\\u79CD\\u975E\\u5E38\\u5E38\\u89C1\\u7684 UI \\u6A21\\u5F0F\\u3002 React Query \\u652F\\u6301\\u4E00\\u4E2A\\u6709\\u7528\\u7684 useQuery \\u7248\\u672C\\uFF0C\\u79F0\\u4E3A useInfiniteQuery \\u7528\\u4E8E\\u67E5\\u8BE2\\u8FD9\\u4E9B\\u7C7B\\u578B\\u7684\\u5217\\u8868\\u3002\")), mdx(\"p\", null, \"\\u6807\\u51C6\\u67E5\\u8BE2\\u539F\\u5B50\\u4E4B\\u95F4\\u7684\\u4E00\\u4E2A\\u663E\\u7740\\u533A\\u522B\\u662F\\u9644\\u52A0\\u9009\\u9879 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getNextPageParam\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getPreviousPageParam\"), \"\\uFF0C\\u60A8\\u5C06\\u4F7F\\u7528\\u5B83\\u4EEC\\u6765\\u6307\\u793A\\u67E5\\u8BE2\\u5982\\u4F55\\u83B7\\u53D6\\u4EFB\\u4F55\\u5176\\u4ED6\\u9875\\u9762\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { atom, useAtom } from \\\"jotai\\\";\\nimport { atomsWithInfiniteQuery } from \\\"jotai-tanstack-query\\\";\\n\\nconst idAtom = atom(1);\\nconst [userAtom] = atomsWithInfiniteQuery((get) => ({\\n  queryKey: [\\\"users\\\", get(idAtom)],\\n  queryFn: async ({ queryKey: [, id] }) => {\\n    const res = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\\n    return res.json();\\n  },\\n  // \\u65E0\\u9650\\u67E5\\u8BE2\\u53EF\\u4EE5\\u652F\\u6301\\u5206\\u9875 fetch\\n  getNextPageParam: (lastPage, pages) => lastPage.nextCursor,\\n}));\\n\\nconst UserData = () => {\\n  const [data] = useAtom(userAtom);\\n  return data.pages.map((userData, index) => (\\n    <div key={index}>{JSON.stringify(userData)}</div>\\n  ));\\n};\\n\")), mdx(\"h3\", null, \"\\u83B7\\u53D6\\u9875\\u9762\\u5E76\\u91CD\\u65B0 fetch\"), mdx(\"p\", null, \"\\u4F7F\\u7528\\u4E0E\\u4E0A\\u8FF0\\u793A\\u4F8B\\u4E2D\\u76F8\\u540C\\u7684\\u539F\\u5B50\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u5C06\\u64CD\\u4F5C\\u5206\\u6D3E\\u7ED9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"userAtom\"), \"\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const UserData = () => {\\n  const [data, dispatch] = useAtom(userAtom);\\n  const handleFetchNextPage = () => dispatch({ type: \\\"fetchNextPage\\\" });\\n  const handleFetchPreviousPage = () => dispatch({ type: \\\"fetchPreviousPage\\\" });\\n};\\n\")), mdx(\"h2\", null, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"atomsWithMutation\"), \" \\u4F7F\\u7528\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomsWithMutation\"), \" \\u4ECE TanStack Query \\u4E2D\\u521B\\u5EFA\\u5B9E\\u73B0\\u6807\\u51C6 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/guides/mutations\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Mutation\")), \" \\u7684\\u65B0\\u539F\\u5B50\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u4E0E\\u67E5\\u8BE2\\u4E0D\\u540C\\uFF0Cmutations \\u901A\\u5E38\\u7528\\u4E8E create/update/delete \\u6570\\u636E\\u6216\\u6267\\u884C\\u670D\\u52A1\\u5668\\u526F\\u4F5C\\u7528\\u3002\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { atom, useAtom } from \\\"jotai\\\";\\nimport { atomsWithMutation } from \\\"jotai-tanstack-query\\\";\\n\\nconst idAtom = atom(1);\\nconst [, postAtom] = atomsWithMutation((get) => ({\\n  mutationKey: [\\\"posts\\\"],\\n  mutationFn: async ({ title, body }) => {\\n    const res = await fetch(`https://jsonplaceholder.typicode.com/posts`, {\\n      method: \\\"POST\\\",\\n      body: JSON.stringify({ title, body, userId: get(idAtom) }),\\n      headers: { \\\"Content-type\\\": \\\"application/json; charset=UTF-8\\\" },\\n    });\\n    const data = await res.json();\\n    return data;\\n  },\\n}));\\n\\nconst PostData = () => {\\n  const [post, mutate] = useAtom(postAtom);\\n  return (\\n    <div>\\n      <button onClick={() => mutate([{ title: \\\"foo\\\", body: \\\"bar\\\" }])}>\\n        Click me\\n      </button>\\n      <div>{JSON.stringify(post)}</div>\\n    </div>\\n  );\\n};\\n\")), mdx(\"h2\", null, \"\\u5728\\u60A8\\u7684\\u9879\\u76EE\\u4E2D\\u5F15\\u7528\\u540C\\u4E00\\u4E2A Query Client \\u5B9E\\u4F8B\"), mdx(\"p\", null, \"\\u4E5F\\u8BB8\\u60A8\\u7684\\u9879\\u76EE\\u4E2D\\u6709\\u4E00\\u4E9B\\u81EA\\u5B9A\\u4E49 hook\\uFF0C\\u8FD9\\u4E9B hook \\u5229\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useQueryClient()\"), \" hook \\u6765\\u83B7\\u53D6 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"QueryClient\"), \" \\u5BF9\\u8C61\\u5E76\\u8C03\\u7528\\u5176\\u65B9\\u6CD5\\u3002\"), mdx(\"p\", null, \"\\u4E3A\\u786E\\u4FDD\\u60A8\\u5F15\\u7528\\u76F8\\u540C\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"QueryClient\"), \" \\u5BF9\\u8C61\\uFF0C\\u8BF7\\u52A1\\u5FC5\\u5C06\\u9879\\u76EE\\u7684\\u6839\\u5305\\u88C5\\u5728 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Provider>\"), \" \\u4E2D\\uFF0C\\u5E76\\u4F7F\\u7528\\u60A8\\u63D0\\u4F9B\\u7ED9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"QueryClientProvider\"), \" \\u7684\\u76F8\\u540C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"queryClient\"), \" \\u503C\\u521D\\u59CB\\u5316 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"queryClientAtom\"), \"\\u3002\"), mdx(\"p\", null, \"\\u5982\\u679C\\u6CA1\\u6709\\u8FD9\\u4E00\\u6B65\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useQueryAtom\"), \" \\u5C06\\u4ECE\\u4EFB\\u4F55\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useQueryClient()\"), \" hook \\u83B7\\u53D6 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"queryClient\"), \" \\u7684 hook \\u4E2D\\u5F15\\u7528\\u4E00\\u4E2A\\u5355\\u72EC\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"QueryClient\"), \"\\u3002\"), mdx(\"p\", null, \"\\u6216\\u8005\\uFF0C\\u60A8\\u53EF\\u4EE5\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getQueryClient\"), \" \\u53C2\\u6570\\u6307\\u5B9A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"queryClient\"), \"\\u3002\"), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(\"p\", null, \"\\u5728\\u4E0B\\u9762\\u7684\\u793A\\u4F8B\\u4E2D\\uFF0C\\u6211\\u4EEC\\u6709\\u4E00\\u4E2A mutation hook \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useTodoMutation\"), \" \\u548C\\u4E00\\u4E2A\\u67E5\\u8BE2 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"todosAtom\"), \"\\u3002\"), mdx(\"p\", null, \"\\u6211\\u4EEC\\u5728\\u6211\\u4EEC\\u7684\\u6839 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<App>\"), \" \\u8282\\u70B9\\u4E2D\\u5305\\u542B\\u4E86\\u4E00\\u4E2A\\u521D\\u59CB\\u5316\\u6B65\\u9AA4\\u3002\"), mdx(\"p\", null, \"\\u5C3D\\u7BA1\\u5B83\\u4EEC\\u5F15\\u7528\\u76F8\\u540C\\u7684\\u67E5\\u8BE2 key\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"'todos'\"), \"\\uFF09\\u65B9\\u6CD5\\uFF0C\\u4F46\\u5982\\u679C\\u672A\\u5B8C\\u6210 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Provider\"), \" \\u521D\\u59CB\\u5316\\u6B65\\u9AA4\\uFF0C\\u5219\\u4E0D\\u4F1A\\u89E6\\u53D1 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useTodoMutation\"), \" \\u4E2D\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onSuccess\"), \" \\u5931\\u6548\\u3002\"), mdx(\"p\", null, \"\\u8FD9\\u5C06\\u5BFC\\u81F4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"todosAtom\"), \" \\u663E\\u793A\\u65E7\\u6570\\u636E\\uFF0C\\u56E0\\u4E3A\\u5B83\\u6CA1\\u6709\\u88AB\\u63D0\\u793A\\u91CD\\u65B0\\u83B7\\u53D6\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import {\\n  useMutation,\\n  useQueryClient,\\n  QueryClient,\\n  QueryClientProvider,\\n} from \\\"@tanstack/react-query\\\";\\nimport { atomsWithQuery, queryClientAtom } from \\\"jotai-tanstack-query\\\";\\n\\nconst queryClient = new QueryClient();\\nexport const App = () => {\\n  return (\\n    <QueryClientProvider client={queryClient}>\\n      {/* This Provider initialisation step is needed so that we reference the same\\n      queryClient in both atomWithQuery and other parts of the app. Without this,\\n      our useQueryClient() hook will return a different QueryClient object */}\\n      <Provider initialValues={[[queryClientAtom, queryClient]]}>\\n        <App />\\n      </Provider>\\n    </QueryClientProvider>\\n  );\\n};\\n\\nexport const [todosAtom] = atomsWithQuery((get) => {\\n  return {\\n    queryKey: [\\\"todos\\\"],\\n    queryFn: () => fetch(\\\"/todos\\\"),\\n  };\\n});\\n\\nexport const useTodoMutation = () => {\\n  const queryClient = useQueryClient();\\n\\n  return useMutation(\\n    async (body: todo) => {\\n      await fetch(\\\"/todo\\\", { Method: \\\"POST\\\", Body: body });\\n    },\\n    {\\n      onSuccess: () => {\\n        void queryClient.invalidateQueries([\\\"todos\\\"]);\\n      },\\n      onError,\\n    }\\n  );\\n};\\n\")), mdx(\"h2\", null, \"SSR \\u652F\\u6301\"), mdx(\"p\", null, \"\\u6240\\u6709\\u539F\\u5B50\\u90FD\\u53EF\\u4EE5\\u5728\\u670D\\u52A1\\u5668\\u7AEF\\u5448\\u73B0\\u7684\\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u4E0A\\u4E0B\\u6587\\u4E2D\\u4F7F\\u7528\\uFF0C\\u4F8B\\u5982 next.js \\u5E94\\u7528\\u7A0B\\u5E8F\\u6216 Gatsby \\u5E94\\u7528\\u7A0B\\u5E8F\\u3002 \\u60A8\\u53EF\\u4EE5\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/guides/ssr\"\n  }, \"\\u540C\\u65F6\\u4F7F\\u7528\\u8FD9\\u4E24\\u4E2A\\u9009\\u9879\"), \" React Query \\u652F\\u6301\\u5728 SSR \\u5E94\\u7528\\u7A0B\\u5E8F\\u4E2D\\u4F7F\\u7528\\uFF0C\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/guides/ssr#using-hydration\"\n  }, \"hydration\"), \" \\u6216 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://tanstack.com/query/v4/docs/guides/ssr#using-initialdata\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"initialData\")), \"\\u3002\"), mdx(\"h2\", null, \"\\u9519\\u8BEF\\u5904\\u7406\"), mdx(\"p\", null, \"\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dataAtom\"), \"\\uFF0C\\u5C06\\u629B\\u51FA\\u83B7\\u53D6\\u9519\\u8BEF\\uFF0C\\u53EF\\u4EE5\\u4F7F\\u7528 ErrorBoundary \\u6355\\u83B7\\u3002\\n\\u91CD\\u65B0\\u83B7\\u53D6\\u53EF\\u80FD\\u4F1A\\u4ECE\\u4E34\\u65F6\\u9519\\u8BEF\\u4E2D\\u6062\\u590D\\u3002\"), mdx(\"p\", null, \"\\u8BF7\\u53C2\\u9605\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://codesandbox.io/s/joer59\"\n  }, \"\\u5DE5\\u4F5C\\u793A\\u4F8B\"), \" \\u4E86\\u89E3\\u66F4\\u591A\\u4FE1\\u606F\\u3002\"), mdx(\"h2\", null, \"Devtools\"), mdx(\"p\", null, \"\\u4E3A\\u4E86\\u4F7F\\u7528 Devtools\\uFF0C\\u60A8\\u9700\\u8981\\u53E6\\u5916\\u5B89\\u88C5\\u5B83\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ npm i @tanstack/react-query-devtools\\n# or\\n$ pnpm add @tanstack/react-query-devtools\\n# or\\n$ yarn add @tanstack/react-query-devtools\\n\")), mdx(\"p\", null, \"\\u60A8\\u6240\\u8981\\u505A\\u7684\\u5C31\\u662F\\u5C06 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ReactQueryDevtools />\"), \" \\u653E\\u5728 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<QueryClientProvider />\"), \" \\u4E2D\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import {\\n  QueryClientProvider,\\n  QueryClient,\\n  QueryCache,\\n} from \\\"@tanstack/react-query\\\";\\nimport { ReactQueryDevtools } from \\\"@tanstack/react-query-devtools\\\";\\nimport { queryClientAtom } from \\\"jotai-tanstack-query\\\";\\n\\nconst queryClient = new QueryClient({\\n  defaultOptions: {\\n    queries: {\\n      staleTime: Infinity,\\n    },\\n  },\\n});\\nexport const App = () => {\\n  return (\\n    <QueryClientProvider client={queryClient}>\\n      <Provider initialValues={[[queryClientAtom, queryClient]] as const}>\\n        <App />\\n      </Provider>\\n      <ReactQueryDevtools />\\n    </QueryClientProvider>\\n  );\\n};\\n\")), mdx(\"h2\", null, \"\\u793A\\u4F8B\"), mdx(\"h3\", null, \"\\u57FA\\u7840\\u6F14\\u793A\"), mdx(CodeSandbox, {\n    id: \"vg6e6u\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h3\", null, \"Devtools \\u6F14\\u793A\"), mdx(CodeSandbox, {\n    id: \"99blcz\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h3\", null, \"\\u9ED1\\u5BA2\\u65B0\\u95FB\"), mdx(CodeSandbox, {\n    id: \"rvrjxg\",\n    mdxType: \"CodeSandbox\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"c1cff074-c24b-5ae7-b319-4abad94786c5","slug":"integrations/query","__params":{"slug":"integrations"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}