{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/utils/abortable-atom","result":{"data":{"mdx":{"slug":"utils/abortable-atom","frontmatter":{"title":"abortableAtom","description":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"abortableAtom\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar CodeSandbox = makeShortcode(\"CodeSandbox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"abortableAtom\"), \" \\u7528\\u4E8E\\u5B9A\\u4E49\\u5177\\u6709\\u4E2D\\u6B62\\u6027\\u7684\\u6D3E\\u751F\\u539F\\u5B50\\u3002\\n\\u5B83\\u4F7F\\u7528 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/AbortController\"\n  }, \"AbortController\"), \" \\u4EE5\\u4FBF\\u60A8\\u53EF\\u4EE5\\u4E2D\\u6B62\\u5F02\\u6B65\\u51FD\\u6570\\u3002\\n\\u5728\\u5F00\\u59CB\\u65B0\\u8BA1\\u7B97\\uFF08\\u8C03\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"read\"), \" \\u51FD\\u6570\\uFF09\\u4E4B\\u524D\\u89E6\\u53D1\\u4E2D\\u6B62\\u3002\"), mdx(\"p\", null, \"\\u5982\\u4F55\\u4F7F\\u7528\\u5B83\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"const readOnlyDerivedAtom = abortableAtom(async (get, { signal }) => {\\n  // \\u4F7F\\u7528\\u4FE1\\u53F7\\u4E2D\\u6B62\\u4F60\\u7684\\u51FD\\u6570\\n});\\n\\nconst writableDerivedAtom = abortableAtom(\\n  async (get, { signal }) => {\\n    // \\u4F7F\\u7528\\u4FE1\\u53F7\\u4E2D\\u6B62\\u4F60\\u7684\\u51FD\\u6570\\n  },\\n  (get, set, arg) => {\\n    // ...\\n  }\\n);\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"signal\"), \" \\u503C\\u4E3A \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal\"\n  }, \"AbortSignal\"), \"\\u3002\\n\\u60A8\\u53EF\\u4EE5\\u68C0\\u67E5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"signal.aborted\"), \" \\u5E03\\u5C14\\u503C\\uFF0C\\u6216\\u5C06 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"abort\"), \" \\u4E8B\\u4EF6\\u4E0E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addEventListener\"), \" \\u4E00\\u8D77\\u4F7F\\u7528\\u3002\"), mdx(\"p\", null, \"\\u5BF9\\u4E8E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" \\u7528\\u4F8B\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u7B80\\u5355\\u5730\\u4F20\\u9012 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"signal\"), \"\\u3002\"), mdx(\"p\", null, \"\\u6709\\u5173 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fetch\"), \" \\u7684\\u7528\\u6CD5\\uFF0C\\u8BF7\\u53C2\\u89C1\\u4E0B\\u9762\\u7684\\u793A\\u4F8B\\u3002\"), mdx(\"h2\", null, \"codesandbox\"), mdx(CodeSandbox, {\n    id: \"h1c9go\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"import { Suspense } from \\\"react\\\";\\nimport { atom, useAtom } from \\\"jotai\\\";\\nimport { abortableAtom } from \\\"jotai/utils\\\";\\n\\nconst userIdAtom = atom(1);\\nconst userAtom = abortableAtom(async (get, { signal }) => {\\n  const userId = get(userIdAtom);\\n  const response = await fetch(\\n    `https://jsonplaceholder.typicode.com/users/${userId}?_delay=2000`,\\n    { signal }\\n  );\\n  return response.json();\\n});\\n\\nconst Controls = () => {\\n  const [userId, setUserId] = useAtom(userIdAtom);\\n  return (\\n    <div>\\n      User Id: {userId}\\n      <button onClick={() => setUserId((c) => c - 1)}>Prev</button>\\n      <button onClick={() => setUserId((c) => c + 1)}>Next</button>\\n    </div>\\n  );\\n};\\n\\nconst UserName = () => {\\n  const [user] = useAtom(userAtom);\\n  return <div>User name: {user.name}</div>;\\n};\\n\\nconst App = () => (\\n  <>\\n    <Controls />\\n    <Suspense fallback=\\\"Loading...\\\">\\n      <UserName />\\n    </Suspense>\\n  </>\\n);\\n\\nexport default App;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"47ee1747-3542-5ab8-9899-296155f8d8bd","slug":"utils/abortable-atom","__params":{"slug":"utils"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}