{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/utils/atom-with-default","result":{"data":{"mdx":{"slug":"utils/atom-with-default","frontmatter":{"title":"atomWithDefault","description":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"atomWithDefault\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar CodeSandbox = makeShortcode(\"CodeSandbox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u5F15\\u7528: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pmndrs/jotai/issues/352\"\n  }, \"https://github.com/pmndrs/jotai/issues/352\")), mdx(\"h2\", null, \"\\u4F7F\\u7528\"), mdx(\"p\", null, \"\\u8FD9\\u662F\\u4E00\\u4E2A\\u521B\\u5EFA\\u53EF\\u91CD\\u7F6E\\u539F\\u59CB\\u539F\\u5B50\\u7684\\u51FD\\u6570\\u3002\\n\\u5B83\\u7684\\u9ED8\\u8BA4\\u503C\\u53EF\\u4EE5\\u7528\\u8BFB\\u53D6\\u51FD\\u6570\\u800C\\u4E0D\\u662F\\u9759\\u6001\\u521D\\u59CB\\u503C\\u6765\\u6307\\u5B9A\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"import { atomWithDefault } from \\\"jotai/utils\\\";\\n\\nconst count1Atom = atom(1);\\nconst count2Atom = atomWithDefault((get) => get(count1Atom) * 2);\\n\")), mdx(\"h2\", null, \"Codesandbox\"), mdx(CodeSandbox, {\n    id: \"unfro\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h2\", null, \"\\u91CD\\u7F6E\\u9ED8\\u8BA4\\u503C\"), mdx(\"p\", null, \"\\u60A8\\u53EF\\u4EE5\\u5C06 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithDefault\"), \" \\u539F\\u5B50\\u7684\\u503C\\u91CD\\u7F6E\\u4E3A\\u5176\\u539F\\u59CB\\u9ED8\\u8BA4\\u503C\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { useAtom } from \\\"jotai\\\";\\nimport { atomWithDefault, useResetAtom, RESET } from \\\"jotai/utils\\\";\\n\\nconst count1Atom = atom(1);\\nconst count2Atom = atomWithDefault((get) => get(count1Atom) * 2);\\n\\nconst Counter = () => {\\n  const [count1, setCount1] = useAtom(count1Atom);\\n  const [count2, setCount2] = useAtom(count2Atom);\\n  const resetCount2 = useResetAtom(count2Atom);\\n\\n  return (\\n    <>\\n      <div>\\n        count1: {count1}, count2: {count2}\\n      </div>\\n      <button onClick={() => setCount1((c) => c + 1)}>increment count1</button>\\n      <button onClick={() => setCount2((c) => c + 1)}>increment count2</button>\\n      <button onClick={() => resetCount2()}>Reset with useResetAtom</button>\\n      <button onClick={() => setCount2(RESET)}>Reset with RESET const</button>\\n    </>\\n  );\\n};\\n\")), mdx(\"p\", null, \"\\u5F53\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"set\"), \" \\u51FD\\u6570\\u8986\\u76D6 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"atomWithDefault\"), \" \\u539F\\u5B50\\u503C\\u65F6\\uFF0C\\u8FD9\\u53EF\\u80FD\\u5F88\\u6709\\u7528\\uFF0C\\u5728\\u8FD9\\u79CD\\u60C5\\u51B5\\u4E0B\\uFF0C\\u4E0D\\u518D\\u4F7F\\u7528\\u63D0\\u4F9B\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"getter\"), \" \\u51FD\\u6570\\uFF0C\\u5E76\\u4E14\\u4F9D\\u8D56\\u539F\\u5B50\\u4E2D\\u7684\\u4EFB\\u4F55\\u66F4\\u6539\\u90FD\\u4E0D\\u4F1A\\u89E6\\u53D1\\u66F4\\u65B0\\u3002\"), mdx(\"p\", null, \"\\u91CD\\u7F6E\\u503C\\u5141\\u8BB8\\u6211\\u4EEC\\u6062\\u590D\\u5176\\u539F\\u59CB\\u9ED8\\u8BA4\\u503C\\uFF0C\\u4E22\\u5F03\\u4E4B\\u524D\\u901A\\u8FC7 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"set\"), \" \\u51FD\\u6570\\u6240\\u505A\\u7684\\u66F4\\u6539\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"24d5b746-eba9-5ceb-aa9e-a0c59a552656","slug":"utils/atom-with-default","__params":{"slug":"utils"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}