{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/utils/use-reset-atom","result":{"data":{"mdx":{"slug":"utils/use-reset-atom","frontmatter":{"title":"useResetAtom","description":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"useResetAtom\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function useResetAtom<Value>(\\n  anAtom: WritableAtom<Value, typeof RESET>\\n): () => void | Promise<void>;\\n\")), mdx(\"p\", null, \"\\u5C06 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../guides/resettable.mdx\"\n  }, \"Resettable atom\"), \" \\u91CD\\u7F6E\\u4E3A\\u5176\\u521D\\u59CB\\u503C\\u3002\"), mdx(\"h2\", null, \"\\u793A\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { useResetAtom } from \\\"jotai/utils\\\";\\nimport { todoListAtom } from \\\"./store\\\";\\n\\nconst TodoResetButton = () => {\\n  const resetTodoList = useResetAtom(todoListAtom);\\n  return <button onClick={resetTodoList}>Reset</button>;\\n};\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"dddd001e-a2a7-572b-a249-a844aba01cde","slug":"utils/use-reset-atom","__params":{"slug":"utils"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}