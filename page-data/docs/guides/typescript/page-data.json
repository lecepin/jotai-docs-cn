{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/guides/typescript","result":{"data":{"mdx":{"slug":"guides/typescript","frontmatter":{"title":"TypeScript","description":"How to use Jotai with TypeScript"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"TypeScript\",\n  \"description\": \"How to use Jotai with TypeScript\",\n  \"nav\": 3.01\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u7248\\u672C\\u8981\\u6C42\"), mdx(\"p\", null, \"Jotai \\u4F7F\\u7528 TypeScript 3.8+ \\u8BED\\u6CD5\\u3002 \\u5982\\u679C\\u60A8\\u4F7F\\u7528\\u7684\\u662F 3.7.5 \\u6216\\u66F4\\u4F4E\\u7248\\u672C\\uFF0C\\u8BF7\\u5347\\u7EA7\\u60A8\\u7684 TypeScript \\u7248\\u672C\\u3002\"), mdx(\"p\", null, \"Jotai \\u4E25\\u91CD\\u4F9D\\u8D56\\u7C7B\\u578B\\u63A8\\u65AD\\uFF0C\\u9700\\u8981\\u542F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"strictNullChecks\"), \"\\u3002 \\u8003\\u8651\\u5728 tsconfig.json \\u4E2D\\u6DFB\\u52A0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"strict\\\": true\"), \"\\u3002\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pmndrs/jotai/issues/550\"\n  }, \"#550\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pmndrs/jotai/issues/802\"\n  }, \"#802\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/pmndrs/jotai/issues/838\"\n  }, \"#838\")), mdx(\"h2\", null, \"\\u7B14\\u8BB0\"), mdx(\"h3\", null, \"\\u539F\\u59CB\\u539F\\u5B50\\u57FA\\u672C\\u4E0A\\u662F\\u7C7B\\u578B\\u63A8\\u65AD\\u7684\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const numAtom = atom(0) // primitive number atom\\nconst strAtom = atom('') // primitive string atom\\n\")), mdx(\"h3\", null, \"\\u539F\\u59CB\\u539F\\u5B50\\u53EF\\u4EE5\\u663E\\u5F0F\\u952E\\u5165\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"const numAtom = atom<number>(0)\\nconst numAtom = atom<number | null>(0)\\nconst arrAtom = atom<string[]>([])\\n\")), mdx(\"h3\", null, \"\\u6D3E\\u751F\\u539F\\u5B50\\u4E5F\\u662F\\u7C7B\\u578B\\u63A8\\u65AD\\u548C\\u663E\\u5F0F\\u7C7B\\u578B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"const asyncStrAtom = atom(async () => 'foo')\\nconst writeOnlyAtom = atom(null, (_get, set, str: string) => set(fooAtom, str))\\nconst readWriteAtom = atom<string, number>(\\n  (get) => get(strAtom),\\n  (_get, set, num) => set(strAtom, String(num))\\n)\\n\")), mdx(\"h3\", null, \"useAtom \\u662F\\u57FA\\u4E8E\\u539F\\u5B50\\u7C7B\\u578B\\u7684\\u7C7B\\u578B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const [num, setNum] = useAtom(primitiveNumAtom)\\nconst [num] = useAtom(readOnlyNumAtom)\\nconst [, setNum] = useAtom(writeOnlyNumAtom)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"b14bd15e-713e-5232-89b9-f5821c9e2e55","slug":"guides/typescript","__params":{"slug":"guides"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}