{"componentChunkName":"component---src-pages-docs-mdx-slug-js","path":"/docs/guides/resettable","result":{"data":{"mdx":{"slug":"guides/resettable","frontmatter":{"title":"可复位","description":"How to use resettable atoms"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"可复位\",\n  \"description\": \"How to use resettable atoms\",\n  \"nav\": 3.06\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar CodeSandbox = makeShortcode(\"CodeSandbox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\u5E26\\u6709 atomWithReset / useResetAtom \\u7684\\u539F\\u59CB\\u53EF\\u91CD\\u7F6E\\u539F\\u5B50\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { useAtom } from 'jotai'\\nimport { atomWithReset, useResetAtom } from 'jotai/utils'\\n\\nconst todoListAtom = atomWithReset([\\n  { description: 'Add a todo', checked: false },\\n])\\n\\nconst TodoList = () => {\\n  const [todoList, setTodoList] = useAtom(todoListAtom)\\n  const resetTodoList = useResetAtom(todoListAtom)\\n\\n  return (\\n    <>\\n      <ul>\\n        {todoList.map((todo) => (\\n          <li>{todo.description}</li>\\n        ))}\\n      </ul>\\n\\n      <button\\n        onClick={() =>\\n          setTodoList((l) => [\\n            ...l,\\n            {\\n              description: `New todo ${new Date().toDateString()}`,\\n              checked: false,\\n            },\\n          ])\\n        }>\\n        Add todo\\n      </button>\\n      <button onClick={resetTodoList}>Reset</button>\\n    </>\\n  )\\n}\\n\")), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(CodeSandbox, {\n    id: \"w91cq\",\n    mdxType: \"CodeSandbox\"\n  }), mdx(\"h2\", null, \"\\u5E26\\u6709 RESET \\u7B26\\u53F7\\u7684\\u6D3E\\u751F\\u539F\\u5B50\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { atom, useAtom } from 'jotai'\\nimport { atomWithReset, useResetAtom, RESET } from 'jotai/utils'\\n\\nconst dollarsAtom = atomWithReset(0)\\nconst centsAtom = atom(\\n  (get) => get(dollarsAtom) * 100,\\n  (get, set, newValue: number | typeof RESET) =>\\n    set(dollarsAtom, newValue === RESET ? newValue : newValue / 100)\\n)\\n\\nconst ResetExample = () => {\\n  const [dollars] = useAtom(dollarsAtom)\\n  const setCents = useUpdateAtom(centsAtom)\\n  const resetCents = useResetAtom(centsAtom)\\n\\n  return (\\n    <>\\n      <h3>Current balance ${dollars}</h3>\\n      <button onClick={() => setCents(100)}>Set $1</button>\\n      <button onClick={() => setCents(200)}>Set $2</button>\\n      <button onClick={resetCents}>Reset</button>\\n    </>\\n  )\\n}\\n\")), mdx(\"h3\", null, \"\\u793A\\u4F8B\"), mdx(CodeSandbox, {\n    id: \"41c0s\",\n    mdxType: \"CodeSandbox\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"130a2eba-edc7-5f68-85d5-822a6559840a","slug":"guides/resettable","__params":{"slug":"guides"}}},"staticQueryHashes":["171421096","4167841181","930225796"]}